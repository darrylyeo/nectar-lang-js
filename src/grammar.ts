// Generated automatically by nearley, version undefined
// http://github.com/Hardmath123/nearley
// Bypasses TS6133. Allow declared but unused functions.
// @ts-ignore
function id(d: any[]): any { return d[0]; }

export interface Token { value: any; [key: string]: any };

export interface Lexer {
  reset: (chunk: string, info: any) => void;
  next: () => Token | undefined;
  save: () => any;
  formatError: (token: Token) => string;
  has: (tokenType: string) => boolean
};

export interface NearleyRule {
  name: string;
  symbols: NearleySymbol[];
  postprocess?: (d: any[], loc?: number, reject?: {}) => any
};

export type NearleySymbol = string | { literal: any, pos?: number } | { test: (token: any) => boolean };

export var Lexer: Lexer | undefined = undefined;

export var ParserRules: NearleyRule[] = [
    {"name": "_$ebnf$1", "symbols": []},
    {"name": "_$ebnf$1", "symbols": ["wschar", "_$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "_", "symbols": ["_$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "__$ebnf$1", "symbols": ["wschar"]},
    {"name": "__$ebnf$1", "symbols": ["wschar", "__$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "__", "symbols": ["__$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "wschar", "symbols": [/[ \t\n\v\f]/], "postprocess": id},
    {"name": "unsigned_int$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "unsigned_int$ebnf$1", "symbols": [/[0-9]/, "unsigned_int$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "unsigned_int", "symbols": ["unsigned_int$ebnf$1"], "postprocess": 
        function(d) {
            return parseInt(d[0].join(""));
        }
        },
    {"name": "int$ebnf$1$subexpression$1", "symbols": [{"literal":"-"}]},
    {"name": "int$ebnf$1$subexpression$1", "symbols": [{"literal":"+"}]},
    {"name": "int$ebnf$1", "symbols": ["int$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "int$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "int$ebnf$2", "symbols": [/[0-9]/]},
    {"name": "int$ebnf$2", "symbols": [/[0-9]/, "int$ebnf$2"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "int", "symbols": ["int$ebnf$1", "int$ebnf$2"], "postprocess": 
        function(d) {
            if (d[0]) {
                return parseInt(d[0][0]+d[1].join(""));
            } else {
                return parseInt(d[1].join(""));
            }
        }
        },
    {"name": "unsigned_decimal$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "unsigned_decimal$ebnf$1", "symbols": [/[0-9]/, "unsigned_decimal$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "unsigned_decimal$ebnf$2$subexpression$1$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "unsigned_decimal$ebnf$2$subexpression$1$ebnf$1", "symbols": [/[0-9]/, "unsigned_decimal$ebnf$2$subexpression$1$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "unsigned_decimal$ebnf$2$subexpression$1", "symbols": [{"literal":"."}, "unsigned_decimal$ebnf$2$subexpression$1$ebnf$1"]},
    {"name": "unsigned_decimal$ebnf$2", "symbols": ["unsigned_decimal$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "unsigned_decimal$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "unsigned_decimal", "symbols": ["unsigned_decimal$ebnf$1", "unsigned_decimal$ebnf$2"], "postprocess": 
        function(d) {
            return parseFloat(
                d[0].join("") +
                (d[1] ? "."+d[1][1].join("") : "")
            );
        }
        },
    {"name": "decimal$ebnf$1", "symbols": [{"literal":"-"}], "postprocess": id},
    {"name": "decimal$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "decimal$ebnf$2", "symbols": [/[0-9]/]},
    {"name": "decimal$ebnf$2", "symbols": [/[0-9]/, "decimal$ebnf$2"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "decimal$ebnf$3$subexpression$1$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "decimal$ebnf$3$subexpression$1$ebnf$1", "symbols": [/[0-9]/, "decimal$ebnf$3$subexpression$1$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "decimal$ebnf$3$subexpression$1", "symbols": [{"literal":"."}, "decimal$ebnf$3$subexpression$1$ebnf$1"]},
    {"name": "decimal$ebnf$3", "symbols": ["decimal$ebnf$3$subexpression$1"], "postprocess": id},
    {"name": "decimal$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "decimal", "symbols": ["decimal$ebnf$1", "decimal$ebnf$2", "decimal$ebnf$3"], "postprocess": 
        function(d) {
            return parseFloat(
                (d[0] || "") +
                d[1].join("") +
                (d[2] ? "."+d[2][1].join("") : "")
            );
        }
        },
    {"name": "percentage", "symbols": ["decimal", {"literal":"%"}], "postprocess": 
        function(d) {
            return d[0]/100;
        }
        },
    {"name": "jsonfloat$ebnf$1", "symbols": [{"literal":"-"}], "postprocess": id},
    {"name": "jsonfloat$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "jsonfloat$ebnf$2", "symbols": [/[0-9]/]},
    {"name": "jsonfloat$ebnf$2", "symbols": [/[0-9]/, "jsonfloat$ebnf$2"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "jsonfloat$ebnf$3$subexpression$1$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "jsonfloat$ebnf$3$subexpression$1$ebnf$1", "symbols": [/[0-9]/, "jsonfloat$ebnf$3$subexpression$1$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "jsonfloat$ebnf$3$subexpression$1", "symbols": [{"literal":"."}, "jsonfloat$ebnf$3$subexpression$1$ebnf$1"]},
    {"name": "jsonfloat$ebnf$3", "symbols": ["jsonfloat$ebnf$3$subexpression$1"], "postprocess": id},
    {"name": "jsonfloat$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "jsonfloat$ebnf$4$subexpression$1$ebnf$1", "symbols": [/[+-]/], "postprocess": id},
    {"name": "jsonfloat$ebnf$4$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "jsonfloat$ebnf$4$subexpression$1$ebnf$2", "symbols": [/[0-9]/]},
    {"name": "jsonfloat$ebnf$4$subexpression$1$ebnf$2", "symbols": [/[0-9]/, "jsonfloat$ebnf$4$subexpression$1$ebnf$2"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "jsonfloat$ebnf$4$subexpression$1", "symbols": [/[eE]/, "jsonfloat$ebnf$4$subexpression$1$ebnf$1", "jsonfloat$ebnf$4$subexpression$1$ebnf$2"]},
    {"name": "jsonfloat$ebnf$4", "symbols": ["jsonfloat$ebnf$4$subexpression$1"], "postprocess": id},
    {"name": "jsonfloat$ebnf$4", "symbols": [], "postprocess": () => null},
    {"name": "jsonfloat", "symbols": ["jsonfloat$ebnf$1", "jsonfloat$ebnf$2", "jsonfloat$ebnf$3", "jsonfloat$ebnf$4"], "postprocess": 
        function(d) {
            return parseFloat(
                (d[0] || "") +
                d[1].join("") +
                (d[2] ? "."+d[2][1].join("") : "") +
                (d[3] ? "e" + (d[3][1] || "+") + d[3][2].join("") : "")
            );
        }
        },
    {"name": "dqstring$ebnf$1", "symbols": []},
    {"name": "dqstring$ebnf$1", "symbols": ["dstrchar", "dqstring$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "dqstring", "symbols": [{"literal":"\""}, "dqstring$ebnf$1", {"literal":"\""}], "postprocess": function(d) {return d[1].join(""); }},
    {"name": "sqstring$ebnf$1", "symbols": []},
    {"name": "sqstring$ebnf$1", "symbols": ["sstrchar", "sqstring$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "sqstring", "symbols": [{"literal":"'"}, "sqstring$ebnf$1", {"literal":"'"}], "postprocess": function(d) {return d[1].join(""); }},
    {"name": "btstring$ebnf$1", "symbols": []},
    {"name": "btstring$ebnf$1", "symbols": [/[^`]/, "btstring$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "btstring", "symbols": [{"literal":"`"}, "btstring$ebnf$1", {"literal":"`"}], "postprocess": function(d) {return d[1].join(""); }},
    {"name": "dstrchar", "symbols": [/[^\\"\n]/], "postprocess": id},
    {"name": "dstrchar", "symbols": [{"literal":"\\"}, "strescape"], "postprocess": 
        function(d) {
            return JSON.parse("\""+d.join("")+"\"");
        }
        },
    {"name": "sstrchar", "symbols": [/[^\\'\n]/], "postprocess": id},
    {"name": "sstrchar", "symbols": [{"literal":"\\"}, "strescape"], "postprocess": function(d) { return JSON.parse("\""+d.join("")+"\""); }},
    {"name": "sstrchar$string$1", "symbols": [{"literal":"\\"}, {"literal":"'"}], "postprocess": (d) => d.join('')},
    {"name": "sstrchar", "symbols": ["sstrchar$string$1"], "postprocess": function(d) {return "'"; }},
    {"name": "strescape", "symbols": [/["\\/bfnrt]/], "postprocess": id},
    {"name": "strescape", "symbols": [{"literal":"u"}, /[a-fA-F0-9]/, /[a-fA-F0-9]/, /[a-fA-F0-9]/, /[a-fA-F0-9]/], "postprocess": 
        function(d) {
            return d.join("");
        }
        },
    {"name": "statements$ebnf$1", "symbols": []},
    {"name": "statements$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "statements$ebnf$1$subexpression$1$ebnf$1", "symbols": ["identifier", "statements$ebnf$1$subexpression$1$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "statements$ebnf$1$subexpression$1", "symbols": ["statements$ebnf$1$subexpression$1$ebnf$1", "_", {"literal":".","pos":31}, "_", "compound_statement"]},
    {"name": "statements$ebnf$1", "symbols": ["statements$ebnf$1$subexpression$1", "statements$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "statements", "symbols": ["compound_statement", "_", "statements$ebnf$1"]},
    {"name": "compound_statement", "symbols": ["subjects", "_", "predicates"]},
    {"name": "predicates$ebnf$1", "symbols": []},
    {"name": "predicates$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": [{"literal":",","pos":59}]},
    {"name": "predicates$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["and"]},
    {"name": "predicates$ebnf$1$subexpression$1$ebnf$1", "symbols": ["predicates$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "predicates$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "predicates$ebnf$1$subexpression$1", "symbols": ["predicates$ebnf$1$subexpression$1$ebnf$1", "_", "predicate"]},
    {"name": "predicates$ebnf$1", "symbols": ["predicates$ebnf$1$subexpression$1", "predicates$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "predicates", "symbols": ["predicate", "_", "predicates$ebnf$1"]},
    {"name": "predicate", "symbols": ["is_a_predicate"]},
    {"name": "predicate", "symbols": ["has_property_predicate"]},
    {"name": "predicate", "symbols": ["relation_predicate"]},
    {"name": "predicate", "symbols": ["hyper_relation_predicate"]},
    {"name": "hyper_relation_predicate", "symbols": ["relation", "_", "categorizations"]},
    {"name": "relation_predicate", "symbols": ["relation", "_", "subject"]},
    {"name": "has_property_predicate$subexpression$1", "symbols": ["has"]},
    {"name": "has_property_predicate$subexpression$1", "symbols": ["with"]},
    {"name": "has_property_predicate$ebnf$1", "symbols": ["article"], "postprocess": id},
    {"name": "has_property_predicate$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "has_property_predicate$ebnf$2", "symbols": ["of"], "postprocess": id},
    {"name": "has_property_predicate$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "has_property_predicate", "symbols": ["has_property_predicate$subexpression$1", "_", "has_property_predicate$ebnf$1", "_", "property", "_", "has_property_predicate$ebnf$2", "_", "expression"]},
    {"name": "is_a_predicate$subexpression$1$ebnf$1", "symbols": ["article"], "postprocess": id},
    {"name": "is_a_predicate$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "is_a_predicate$subexpression$1", "symbols": ["is", "_", "is_a_predicate$subexpression$1$ebnf$1"]},
    {"name": "is_a_predicate$subexpression$1$ebnf$2", "symbols": ["article"], "postprocess": id},
    {"name": "is_a_predicate$subexpression$1$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "is_a_predicate$subexpression$1$subexpression$1$subexpression$1", "symbols": [/[cC]/, /[aA]/, /[tT]/, /[eE]/, /[gG]/, /[oO]/, /[rR]/, /[yY]/], "postprocess": function(e){return e.join("")}},
    {"name": "is_a_predicate$subexpression$1$subexpression$1", "symbols": ["is_a_predicate$subexpression$1$subexpression$1$subexpression$1"]},
    {"name": "is_a_predicate$subexpression$1$subexpression$1$subexpression$2", "symbols": [/[tT]/, /[yY]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "is_a_predicate$subexpression$1$subexpression$1", "symbols": ["is_a_predicate$subexpression$1$subexpression$1$subexpression$2"]},
    {"name": "is_a_predicate$subexpression$1$ebnf$3", "symbols": ["of"], "postprocess": id},
    {"name": "is_a_predicate$subexpression$1$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "is_a_predicate$subexpression$1", "symbols": ["has", "_", "is_a_predicate$subexpression$1$ebnf$2", "_", "is_a_predicate$subexpression$1$subexpression$1", "_", "is_a_predicate$subexpression$1$ebnf$3"]},
    {"name": "is_a_predicate", "symbols": ["is_a_predicate$subexpression$1", "_", "categorizations"]},
    {"name": "relation$ebnf$1$subexpression$1", "symbols": [/[tT]/, /[oO]/], "postprocess": function(e){return e.join("")}},
    {"name": "relation$ebnf$1", "symbols": ["relation$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "relation$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "relation$subexpression$1", "symbols": ["is"]},
    {"name": "relation$subexpression$1", "symbols": ["has"]},
    {"name": "relation$subexpression$1$subexpression$1", "symbols": [/[cC]/, /[rR]/, /[eE]/, /[aA]/, /[tT]/, /[eE]/, /[dD]/, {"literal":" "}, /[bB]/, /[yY]/], "postprocess": function(e){return e.join("")}},
    {"name": "relation$subexpression$1", "symbols": ["relation$subexpression$1$subexpression$1"]},
    {"name": "relation$subexpression$1$subexpression$2", "symbols": [/[rR]/, /[eE]/, /[pP]/, /[rR]/, /[eE]/, /[sS]/, /[eE]/, /[nN]/, /[tT]/], "postprocess": function(e){return e.join("")}},
    {"name": "relation$subexpression$1", "symbols": ["relation$subexpression$1$subexpression$2"]},
    {"name": "relation$subexpression$1$subexpression$3", "symbols": [/[wW]/, /[oO]/, /[rR]/, /[kK]/, /[sS]/, {"literal":" "}, /[wW]/, /[iI]/, /[tT]/, /[hH]/], "postprocess": function(e){return e.join("")}},
    {"name": "relation$subexpression$1", "symbols": ["relation$subexpression$1$subexpression$3"]},
    {"name": "relation$subexpression$1$subexpression$4", "symbols": [/[cC]/, /[oO]/, /[mM]/, /[pP]/, /[iI]/, /[lL]/, /[eE]/, /[sS]/, {"literal":" "}, /[tT]/, /[oO]/], "postprocess": function(e){return e.join("")}},
    {"name": "relation$subexpression$1", "symbols": ["relation$subexpression$1$subexpression$4"]},
    {"name": "relation$subexpression$1$subexpression$5", "symbols": [/[sS]/, /[aA]/, /[yY]/, /[sS]/], "postprocess": function(e){return e.join("")}},
    {"name": "relation$subexpression$1", "symbols": ["relation$subexpression$1$subexpression$5"]},
    {"name": "relation", "symbols": ["relation$ebnf$1", "_", "relation$subexpression$1"]},
    {"name": "property", "symbols": ["identifier"]},
    {"name": "categorizations$ebnf$1", "symbols": []},
    {"name": "categorizations$ebnf$1$subexpression$1", "symbols": [{"literal":",","pos":246}, "_", "categorization"]},
    {"name": "categorizations$ebnf$1", "symbols": ["categorizations$ebnf$1$subexpression$1", "categorizations$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "categorizations$ebnf$2$subexpression$1$ebnf$1", "symbols": [{"literal":",","pos":257}], "postprocess": id},
    {"name": "categorizations$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "categorizations$ebnf$2$subexpression$1", "symbols": ["categorizations$ebnf$2$subexpression$1$ebnf$1", "_", "and", "_", "categorization"]},
    {"name": "categorizations$ebnf$2", "symbols": ["categorizations$ebnf$2$subexpression$1"]},
    {"name": "categorizations$ebnf$2$subexpression$2$ebnf$1", "symbols": [{"literal":",","pos":257}], "postprocess": id},
    {"name": "categorizations$ebnf$2$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "categorizations$ebnf$2$subexpression$2", "symbols": ["categorizations$ebnf$2$subexpression$2$ebnf$1", "_", "and", "_", "categorization"]},
    {"name": "categorizations$ebnf$2", "symbols": ["categorizations$ebnf$2$subexpression$2", "categorizations$ebnf$2"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "categorizations", "symbols": ["categorization", "_", "categorizations$ebnf$1", "_", "categorizations$ebnf$2"]},
    {"name": "categorizations$ebnf$3", "symbols": []},
    {"name": "categorizations$ebnf$3$subexpression$1", "symbols": [{"literal":";","pos":277}, "_", "categorization"]},
    {"name": "categorizations$ebnf$3", "symbols": ["categorizations$ebnf$3$subexpression$1", "categorizations$ebnf$3"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "categorizations$ebnf$4$subexpression$1$ebnf$1", "symbols": [{"literal":";","pos":288}], "postprocess": id},
    {"name": "categorizations$ebnf$4$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "categorizations$ebnf$4$subexpression$1", "symbols": ["categorizations$ebnf$4$subexpression$1$ebnf$1", "_", "and", "_", "categorization"]},
    {"name": "categorizations$ebnf$4", "symbols": ["categorizations$ebnf$4$subexpression$1"]},
    {"name": "categorizations$ebnf$4$subexpression$2$ebnf$1", "symbols": [{"literal":";","pos":288}], "postprocess": id},
    {"name": "categorizations$ebnf$4$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "categorizations$ebnf$4$subexpression$2", "symbols": ["categorizations$ebnf$4$subexpression$2$ebnf$1", "_", "and", "_", "categorization"]},
    {"name": "categorizations$ebnf$4", "symbols": ["categorizations$ebnf$4$subexpression$2", "categorizations$ebnf$4"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "categorizations", "symbols": ["categorization", "_", "categorizations$ebnf$3", "_", "categorizations$ebnf$4"]},
    {"name": "categorizations$ebnf$5", "symbols": []},
    {"name": "categorizations$ebnf$5$subexpression$1", "symbols": [{"literal":"/","pos":308}, "_", "categorization"]},
    {"name": "categorizations$ebnf$5", "symbols": ["categorizations$ebnf$5$subexpression$1", "categorizations$ebnf$5"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "categorizations", "symbols": ["categorization", "_", "categorizations$ebnf$5"]},
    {"name": "categorization$ebnf$1", "symbols": ["category_alias"], "postprocess": id},
    {"name": "categorization$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "categorization", "symbols": ["category", "_", "categorization$ebnf$1"]},
    {"name": "category_alias$ebnf$1", "symbols": ["aka"], "postprocess": id},
    {"name": "category_alias$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "category_alias$subexpression$1", "symbols": ["category"]},
    {"name": "category_alias$subexpression$1", "symbols": ["category_disjunction"]},
    {"name": "category_alias", "symbols": [{"literal":"(","pos":331}, "_", "category_alias$ebnf$1", "_", "category_alias$subexpression$1", "_", {"literal":")","pos":350}]},
    {"name": "category_alias$ebnf$2", "symbols": [{"literal":",","pos":354}], "postprocess": id},
    {"name": "category_alias$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "category_alias$subexpression$2", "symbols": ["category"]},
    {"name": "category_alias$subexpression$2", "symbols": ["category_disjunction"]},
    {"name": "category_alias$ebnf$3", "symbols": [{"literal":",","pos":373}], "postprocess": id},
    {"name": "category_alias$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "category_alias", "symbols": ["category_alias$ebnf$2", "_", "aka", "_", "category_alias$subexpression$2", "_", "category_alias$ebnf$3"]},
    {"name": "category_conjunction$ebnf$1", "symbols": []},
    {"name": "category_conjunction$ebnf$1$subexpression$1", "symbols": [{"literal":",","pos":385}, "_", "category"]},
    {"name": "category_conjunction$ebnf$1", "symbols": ["category_conjunction$ebnf$1$subexpression$1", "category_conjunction$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "category_conjunction$ebnf$2$subexpression$1$ebnf$1", "symbols": [{"literal":",","pos":396}], "postprocess": id},
    {"name": "category_conjunction$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "category_conjunction$ebnf$2$subexpression$1", "symbols": ["category_conjunction$ebnf$2$subexpression$1$ebnf$1", "_", "and", "_", "category"]},
    {"name": "category_conjunction$ebnf$2", "symbols": ["category_conjunction$ebnf$2$subexpression$1"]},
    {"name": "category_conjunction$ebnf$2$subexpression$2$ebnf$1", "symbols": [{"literal":",","pos":396}], "postprocess": id},
    {"name": "category_conjunction$ebnf$2$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "category_conjunction$ebnf$2$subexpression$2", "symbols": ["category_conjunction$ebnf$2$subexpression$2$ebnf$1", "_", "and", "_", "category"]},
    {"name": "category_conjunction$ebnf$2", "symbols": ["category_conjunction$ebnf$2$subexpression$2", "category_conjunction$ebnf$2"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "category_conjunction", "symbols": ["category", "_", "category_conjunction$ebnf$1", "_", "category_conjunction$ebnf$2"]},
    {"name": "category_disjunction$ebnf$1", "symbols": []},
    {"name": "category_disjunction$ebnf$1$subexpression$1", "symbols": [{"literal":",","pos":418}, "_", "category"]},
    {"name": "category_disjunction$ebnf$1", "symbols": ["category_disjunction$ebnf$1$subexpression$1", "category_disjunction$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "category_disjunction$ebnf$2$subexpression$1$ebnf$1", "symbols": [{"literal":",","pos":429}], "postprocess": id},
    {"name": "category_disjunction$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "category_disjunction$ebnf$2$subexpression$1", "symbols": ["category_disjunction$ebnf$2$subexpression$1$ebnf$1", "_", "or", "_", "category"]},
    {"name": "category_disjunction$ebnf$2", "symbols": ["category_disjunction$ebnf$2$subexpression$1"]},
    {"name": "category_disjunction$ebnf$2$subexpression$2$ebnf$1", "symbols": [{"literal":",","pos":429}], "postprocess": id},
    {"name": "category_disjunction$ebnf$2$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "category_disjunction$ebnf$2$subexpression$2", "symbols": ["category_disjunction$ebnf$2$subexpression$2$ebnf$1", "_", "or", "_", "category"]},
    {"name": "category_disjunction$ebnf$2", "symbols": ["category_disjunction$ebnf$2$subexpression$2", "category_disjunction$ebnf$2"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "category_disjunction", "symbols": ["category", "_", "category_disjunction$ebnf$1", "_", "category_disjunction$ebnf$2"]},
    {"name": "category$ebnf$1", "symbols": ["article"], "postprocess": id},
    {"name": "category$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "category", "symbols": ["category$ebnf$1", {"literal":"#","pos":449}, "identifier"]},
    {"name": "subjects$ebnf$1", "symbols": []},
    {"name": "subjects$ebnf$1$subexpression$1", "symbols": [{"literal":",","pos":462}, "_", "subject"]},
    {"name": "subjects$ebnf$1", "symbols": ["subjects$ebnf$1$subexpression$1", "subjects$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "subjects$ebnf$2$subexpression$1$ebnf$1", "symbols": [{"literal":",","pos":473}], "postprocess": id},
    {"name": "subjects$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "subjects$ebnf$2$subexpression$1", "symbols": ["subjects$ebnf$2$subexpression$1$ebnf$1", "_", "and", "_", "subject"]},
    {"name": "subjects$ebnf$2", "symbols": ["subjects$ebnf$2$subexpression$1"]},
    {"name": "subjects$ebnf$2$subexpression$2$ebnf$1", "symbols": [{"literal":",","pos":473}], "postprocess": id},
    {"name": "subjects$ebnf$2$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "subjects$ebnf$2$subexpression$2", "symbols": ["subjects$ebnf$2$subexpression$2$ebnf$1", "_", "and", "_", "subject"]},
    {"name": "subjects$ebnf$2", "symbols": ["subjects$ebnf$2$subexpression$2", "subjects$ebnf$2"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "subjects", "symbols": ["subject", "_", "subjects$ebnf$1", "_", "subjects$ebnf$2"]},
    {"name": "subjects$ebnf$3", "symbols": []},
    {"name": "subjects$ebnf$3$subexpression$1", "symbols": [{"literal":";","pos":493}, "_", "subject"]},
    {"name": "subjects$ebnf$3", "symbols": ["subjects$ebnf$3$subexpression$1", "subjects$ebnf$3"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "subjects$ebnf$4$subexpression$1$ebnf$1", "symbols": [{"literal":";","pos":504}], "postprocess": id},
    {"name": "subjects$ebnf$4$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "subjects$ebnf$4$subexpression$1", "symbols": ["subjects$ebnf$4$subexpression$1$ebnf$1", "_", "and", "_", "subject"]},
    {"name": "subjects$ebnf$4", "symbols": ["subjects$ebnf$4$subexpression$1"]},
    {"name": "subjects$ebnf$4$subexpression$2$ebnf$1", "symbols": [{"literal":";","pos":504}], "postprocess": id},
    {"name": "subjects$ebnf$4$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "subjects$ebnf$4$subexpression$2", "symbols": ["subjects$ebnf$4$subexpression$2$ebnf$1", "_", "and", "_", "subject"]},
    {"name": "subjects$ebnf$4", "symbols": ["subjects$ebnf$4$subexpression$2", "subjects$ebnf$4"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "subjects", "symbols": ["subject", "_", "subjects$ebnf$3", "_", "subjects$ebnf$4"]},
    {"name": "subjects$ebnf$5", "symbols": []},
    {"name": "subjects$ebnf$5$subexpression$1", "symbols": [{"literal":"/","pos":524}, "_", "subject"]},
    {"name": "subjects$ebnf$5", "symbols": ["subjects$ebnf$5$subexpression$1", "subjects$ebnf$5"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "subjects", "symbols": ["subject", "_", "subjects$ebnf$5"]},
    {"name": "subject$ebnf$1", "symbols": ["noun_alias"], "postprocess": id},
    {"name": "subject$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "subject", "symbols": ["noun", "_", "subject$ebnf$1"]},
    {"name": "noun_alias$ebnf$1", "symbols": ["aka"], "postprocess": id},
    {"name": "noun_alias$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "noun_alias$subexpression$1", "symbols": ["noun"]},
    {"name": "noun_alias$subexpression$1", "symbols": ["noun_disjunction"]},
    {"name": "noun_alias", "symbols": [{"literal":"(","pos":547}, "_", "noun_alias$ebnf$1", "_", "noun_alias$subexpression$1", "_", {"literal":")","pos":566}]},
    {"name": "noun_alias$ebnf$2", "symbols": [{"literal":",","pos":570}], "postprocess": id},
    {"name": "noun_alias$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "noun_alias$subexpression$2", "symbols": ["noun"]},
    {"name": "noun_alias$subexpression$2", "symbols": ["noun_disjunction"]},
    {"name": "noun_alias$ebnf$3", "symbols": [{"literal":",","pos":589}], "postprocess": id},
    {"name": "noun_alias$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "noun_alias", "symbols": ["noun_alias$ebnf$2", "_", "aka", "_", "noun_alias$subexpression$2", "_", "noun_alias$ebnf$3"], "postprocess": id},
    {"name": "noun_conjunction$ebnf$1", "symbols": []},
    {"name": "noun_conjunction$ebnf$1$subexpression$1", "symbols": [{"literal":",","pos":603}, "_", "noun"]},
    {"name": "noun_conjunction$ebnf$1", "symbols": ["noun_conjunction$ebnf$1$subexpression$1", "noun_conjunction$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "noun_conjunction$ebnf$2$subexpression$1$ebnf$1", "symbols": [{"literal":",","pos":614}], "postprocess": id},
    {"name": "noun_conjunction$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "noun_conjunction$ebnf$2$subexpression$1", "symbols": ["noun_conjunction$ebnf$2$subexpression$1$ebnf$1", "_", "and", "_", "noun"]},
    {"name": "noun_conjunction$ebnf$2", "symbols": ["noun_conjunction$ebnf$2$subexpression$1"]},
    {"name": "noun_conjunction$ebnf$2$subexpression$2$ebnf$1", "symbols": [{"literal":",","pos":614}], "postprocess": id},
    {"name": "noun_conjunction$ebnf$2$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "noun_conjunction$ebnf$2$subexpression$2", "symbols": ["noun_conjunction$ebnf$2$subexpression$2$ebnf$1", "_", "and", "_", "noun"]},
    {"name": "noun_conjunction$ebnf$2", "symbols": ["noun_conjunction$ebnf$2$subexpression$2", "noun_conjunction$ebnf$2"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "noun_conjunction", "symbols": ["noun", "_", "noun_conjunction$ebnf$1", "_", "noun_conjunction$ebnf$2"], "postprocess": id},
    {"name": "noun_disjunction$ebnf$1", "symbols": []},
    {"name": "noun_disjunction$ebnf$1$subexpression$1", "symbols": [{"literal":",","pos":638}, "_", "noun"]},
    {"name": "noun_disjunction$ebnf$1", "symbols": ["noun_disjunction$ebnf$1$subexpression$1", "noun_disjunction$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "noun_disjunction$ebnf$2$subexpression$1$ebnf$1", "symbols": [{"literal":",","pos":649}], "postprocess": id},
    {"name": "noun_disjunction$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "noun_disjunction$ebnf$2$subexpression$1", "symbols": ["noun_disjunction$ebnf$2$subexpression$1$ebnf$1", "_", "or", "_", "noun"]},
    {"name": "noun_disjunction$ebnf$2", "symbols": ["noun_disjunction$ebnf$2$subexpression$1"]},
    {"name": "noun_disjunction$ebnf$2$subexpression$2$ebnf$1", "symbols": [{"literal":",","pos":649}], "postprocess": id},
    {"name": "noun_disjunction$ebnf$2$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "noun_disjunction$ebnf$2$subexpression$2", "symbols": ["noun_disjunction$ebnf$2$subexpression$2$ebnf$1", "_", "or", "_", "noun"]},
    {"name": "noun_disjunction$ebnf$2", "symbols": ["noun_disjunction$ebnf$2$subexpression$2", "noun_disjunction$ebnf$2"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "noun_disjunction", "symbols": ["noun", "_", "noun_disjunction$ebnf$1", "_", "noun_disjunction$ebnf$2"], "postprocess": id},
    {"name": "noun$ebnf$1", "symbols": ["article"], "postprocess": id},
    {"name": "noun$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "noun", "symbols": ["noun$ebnf$1", {"literal":"@","pos":671}, "identifier"]},
    {"name": "noun", "symbols": [{"literal":"@","pos":677}, "string"]},
    {"name": "expression", "symbols": ["string"]},
    {"name": "expression", "symbols": ["quantity"]},
    {"name": "expression", "symbols": ["number"]},
    {"name": "non_keyword", "symbols": ["identifier"], "postprocess": id},
    {"name": "keyword", "symbols": ["article"]},
    {"name": "keyword", "symbols": ["and"]},
    {"name": "keyword", "symbols": ["or"]},
    {"name": "keyword", "symbols": ["is"]},
    {"name": "keyword", "symbols": ["has"]},
    {"name": "keyword", "symbols": ["of"]},
    {"name": "keyword", "symbols": ["with"]},
    {"name": "keyword", "symbols": ["aka"], "postprocess": id},
    {"name": "aka$subexpression$1", "symbols": [/[aA]/, /[kK]/, /[aA]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka", "symbols": ["aka$subexpression$1"]},
    {"name": "aka$subexpression$2", "symbols": [/[aA]/, /[lL]/, /[iI]/, /[aA]/, /[sS]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka", "symbols": ["aka$subexpression$2"]},
    {"name": "aka$ebnf$1$subexpression$1$subexpression$1", "symbols": [/[aA]/, /[lL]/, /[sS]/, /[oO]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka$ebnf$1$subexpression$1", "symbols": ["aka$ebnf$1$subexpression$1$subexpression$1"]},
    {"name": "aka$ebnf$1$subexpression$1$subexpression$2", "symbols": [/[bB]/, /[eE]/, /[tT]/, /[tT]/, /[eE]/, /[rR]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka$ebnf$1$subexpression$1", "symbols": ["aka$ebnf$1$subexpression$1$subexpression$2"]},
    {"name": "aka$ebnf$1$subexpression$1$subexpression$3", "symbols": [/[cC]/, /[oO]/, /[mM]/, /[mM]/, /[oO]/, /[nN]/, /[lL]/, /[yY]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka$ebnf$1$subexpression$1", "symbols": ["aka$ebnf$1$subexpression$1$subexpression$3"]},
    {"name": "aka$ebnf$1$subexpression$1$subexpression$4", "symbols": [/[oO]/, /[tT]/, /[hH]/, /[eE]/, /[rR]/, /[wW]/, /[iI]/, /[sS]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka$ebnf$1$subexpression$1", "symbols": ["aka$ebnf$1$subexpression$1$subexpression$4"]},
    {"name": "aka$ebnf$1$subexpression$1$subexpression$5", "symbols": [/[wW]/, /[iI]/, /[dD]/, /[eE]/, /[lL]/, /[yY]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka$ebnf$1$subexpression$1", "symbols": ["aka$ebnf$1$subexpression$1$subexpression$5"]},
    {"name": "aka$ebnf$1", "symbols": ["aka$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "aka$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "aka$subexpression$3$subexpression$1", "symbols": [/[cC]/, /[aA]/, /[lL]/, /[lL]/, /[eE]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka$subexpression$3", "symbols": ["aka$subexpression$3$subexpression$1"]},
    {"name": "aka$subexpression$3$subexpression$2", "symbols": [/[kK]/, /[nN]/, /[oO]/, /[wW]/, /[nN]/, {"literal":" "}, /[aA]/, /[sS]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka$subexpression$3", "symbols": ["aka$subexpression$3$subexpression$2"]},
    {"name": "aka$subexpression$3$subexpression$3", "symbols": [/[nN]/, /[aA]/, /[mM]/, /[eE]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka$subexpression$3", "symbols": ["aka$subexpression$3$subexpression$3"]},
    {"name": "aka$subexpression$3$subexpression$4", "symbols": [/[tT]/, /[iI]/, /[tT]/, /[lL]/, /[eE]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "aka$subexpression$3", "symbols": ["aka$subexpression$3$subexpression$4"]},
    {"name": "aka", "symbols": ["aka$ebnf$1", "_", "aka$subexpression$3"]},
    {"name": "aka", "symbols": ["or"], "postprocess": id},
    {"name": "with$subexpression$1", "symbols": [/[wW]/, /[iI]/, /[tT]/, /[hH]/], "postprocess": function(e){return e.join("")}},
    {"name": "with", "symbols": ["with$subexpression$1"], "postprocess": id},
    {"name": "of$subexpression$1", "symbols": [/[oO]/, /[fF]/], "postprocess": function(e){return e.join("")}},
    {"name": "of", "symbols": ["of$subexpression$1"], "postprocess": id},
    {"name": "has$subexpression$1$subexpression$1", "symbols": [/[hH]/, /[aA]/, /[sS]/], "postprocess": function(e){return e.join("")}},
    {"name": "has$subexpression$1", "symbols": ["has$subexpression$1$subexpression$1"]},
    {"name": "has$subexpression$1$subexpression$2", "symbols": [/[hH]/, /[aA]/, /[vV]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "has$subexpression$1", "symbols": ["has$subexpression$1$subexpression$2"]},
    {"name": "has$ebnf$1", "symbols": ["article"], "postprocess": id},
    {"name": "has$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "has", "symbols": ["has$subexpression$1", "_", "has$ebnf$1"], "postprocess": id},
    {"name": "is$subexpression$1$subexpression$1", "symbols": [/[iI]/, /[sS]/], "postprocess": function(e){return e.join("")}},
    {"name": "is$subexpression$1", "symbols": ["is$subexpression$1$subexpression$1"]},
    {"name": "is$subexpression$1$subexpression$2", "symbols": [/[aA]/, /[rR]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "is$subexpression$1$ebnf$1$subexpression$1", "symbols": [/[aA]/, /[lL]/, /[lL]/], "postprocess": function(e){return e.join("")}},
    {"name": "is$subexpression$1$ebnf$1", "symbols": ["is$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "is$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "is$subexpression$1", "symbols": ["is$subexpression$1$subexpression$2", "_", "is$subexpression$1$ebnf$1"]},
    {"name": "is$subexpression$1$subexpression$3", "symbols": [/[cC]/, /[aA]/, /[nN]/, {"literal":" "}, /[bB]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "is$subexpression$1", "symbols": ["is$subexpression$1$subexpression$3"]},
    {"name": "is$subexpression$1$subexpression$4", "symbols": [/[aA]/, /[mM]/], "postprocess": function(e){return e.join("")}},
    {"name": "is$subexpression$1", "symbols": ["is$subexpression$1$subexpression$4"]},
    {"name": "is", "symbols": ["is$subexpression$1"], "postprocess": id},
    {"name": "or$subexpression$1", "symbols": [/[oO]/, /[rR]/], "postprocess": function(e){return e.join("")}},
    {"name": "or", "symbols": ["or$subexpression$1"], "postprocess": id},
    {"name": "and$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "and", "symbols": ["and$subexpression$1"], "postprocess": id},
    {"name": "article$subexpression$1", "symbols": [/[aA]/, /[nN]/], "postprocess": function(e){return e.join("")}},
    {"name": "article", "symbols": ["article$subexpression$1"]},
    {"name": "article$subexpression$2", "symbols": [/[aA]/], "postprocess": function(e){return e.join("")}},
    {"name": "article", "symbols": ["article$subexpression$2"]},
    {"name": "article$subexpression$3", "symbols": [/[tT]/, /[hH]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "article", "symbols": ["article$subexpression$3"], "postprocess": id},
    {"name": "quantity", "symbols": ["number", "_", "unit"]},
    {"name": "unit$ebnf$1", "symbols": []},
    {"name": "unit$ebnf$1$subexpression$1", "symbols": [{"literal":"/","pos":934}, "_", "non_keyword"]},
    {"name": "unit$ebnf$1", "symbols": ["unit$ebnf$1$subexpression$1", "unit$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "unit", "symbols": ["non_keyword", "_", "unit$ebnf$1"]},
    {"name": "string", "symbols": ["dqstring"]},
    {"name": "string", "symbols": ["sqstring"]},
    {"name": "number$subexpression$1", "symbols": ["decimal"]},
    {"name": "number$subexpression$1", "symbols": ["int"]},
    {"name": "number$ebnf$1$subexpression$1$subexpression$1", "symbols": [/[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "number$ebnf$1$subexpression$1", "symbols": ["number$ebnf$1$subexpression$1$subexpression$1", "int"]},
    {"name": "number$ebnf$1", "symbols": ["number$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "number$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "number", "symbols": ["number$subexpression$1", "number$ebnf$1"]},
    {"name": "identifier$ebnf$1", "symbols": []},
    {"name": "identifier$ebnf$1$subexpression$1", "symbols": ["alpha"]},
    {"name": "identifier$ebnf$1$subexpression$1", "symbols": ["digit"]},
    {"name": "identifier$ebnf$1$subexpression$1", "symbols": [{"literal":"_","pos":987}]},
    {"name": "identifier$ebnf$1$subexpression$1", "symbols": [{"literal":"-","pos":991}]},
    {"name": "identifier$ebnf$1", "symbols": ["identifier$ebnf$1$subexpression$1", "identifier$ebnf$1"], "postprocess": (d) => [d[0]].concat(d[1])},
    {"name": "identifier", "symbols": ["alpha", "identifier$ebnf$1"]},
    {"name": "digit", "symbols": [/[0-9]/]},
    {"name": "alpha", "symbols": [/[a-zA-Z]/]}
];

export var ParserStart: string = "statements";
